<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>entity</name>
	<filePath>src/main/kotlin/${packageName}/${moduleName}/entity/${subModuleName}</filePath>
	<fileName>${ClassName}.kt</fileName>
	<content><![CDATA[
package ${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>

<#list table.importList as i>
import ${i?replace("modules.modules","modules")}
</#list>
import com.fy.erp.common.persistence.DataEntity

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
class ${ClassName}: DataEntity<${ClassName}> {

	<#-- 生成字段属性 -->
	<#list table.columnList as c>
		<#-- 如果不是基类属性 -->
		<#if c.isNotBaseField>
			<#list c.simpleAnnotationList as a>
	@get:${a}
			</#list>
			<#-- 父类对象 -->
			<#if table.parentExists && table.parentTableFk == c.name>
	var ${c.simpleJavaField}: ${table.parent.className?cap_first}? = null		<#if c.comments??>// ${c.comments} 父类</#if>
			<#-- 其它字段 -->
			<#else>
	var ${c.simpleJavaField}: ${c.simpleJavaType}? = null 		<#if c.comments??>// ${c.comments}</#if>
			</#if>
		</#if>
	</#list>
	<#-- 范围条件字段 -->
	<#list table.columnList as c>
		<#if c.isQuery?? && c.isQuery == "1" && c.queryType == "between">
	var begin${c.simpleJavaField?cap_first}: ${c.simpleJavaType}? = null		<#if c.comments??>// 开始 ${c.comments}</#if>

	var end${c.simpleJavaField?cap_first}: ${c.simpleJavaType}? = null 		<#if c.comments??>// 结束 ${c.comments}</#if>
		</#if>
	</#list>
	<#-- 子表列表字段 -->
	<#list table.childList as c>
	var ${c.className?uncap_first}List: List<${c.className?cap_first}> = Lists.newArrayList()		// 子表列表
	</#list>

	constructor() : super() {}

    constructor(id: String) : super(id) {}

<#list table.columnList as c>
		<#-- 如果不是基类属性 -->
		<#if c.isNotBaseField>
			<#-- 父类对象 -->
			<#if table.parentExists &&  c.name ==  table.parentTableFk>
	constructor(${c.simpleJavaField}: ${table.parent.className?cap_first}) {
        this.${c.simpleJavaField} = ${c.simpleJavaField}
    }
			</#if>
		</#if>
</#list>

// ========================================================================================

}]]>
	</content>
</template>